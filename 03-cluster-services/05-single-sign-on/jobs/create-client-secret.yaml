apiVersion: batch/v1
kind: Job
metadata:
  name: create-client-secret
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
      - image: registry.redhat.io/openshift-gitops-1/argocd-rhel8:v1.5.0
        command:
          - /bin/bash
          - -c
          - |
            HAS_SECRET=$(kubectl get secret $SECRET_NAME -n $TARGET_NAMESPACE --ignore-not-found)
            if [ -z "$HAS_SECRET" ];
            then
              echo "No $SECRET_NAME present, creating"

              # Create a Secret in the openshift-config namespace that contains the keycloak client secret.
              oc create secret generic $SECRET_NAME --from-literal=clientSecret="$CLIENT_SECRET" -n $TARGET_NAMESPACE

            else
              echo "The secret $SECRET_NAME already exists, skipping"
            fi
        env:
        # The CICD namespace where the token needs to be deployed to
        - name: TARGET_NAMESPACE
          value: "openshift-config"
        - name: SECRET_NAME
          value: "openid-client-secret"
          #this value should match the one in the KeycloakClient
        - name: CLIENT_SECRET
          value: "5e9326ee-ac8d-40bf-9060-e91dbe9d9000"
        imagePullPolicy: Always
        name: create-openid-ca-crt
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccount: openshift-gitops-argocd-application-controller
      serviceAccountName: openshift-gitops-argocd-application-controller
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 30